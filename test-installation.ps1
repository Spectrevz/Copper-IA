#!/usr/bin/env pwsh
# Script de teste para verificar a instala√ß√£o do AI Copper

Write-Host "üîç Verificando instala√ß√£o do AI Copper..." -ForegroundColor Cyan

# Verifica se o Cargo.toml existe
if (!(Test-Path "Cargo.toml")) {
    Write-Host "‚ùå Cargo.toml n√£o encontrado!" -ForegroundColor Red
    Write-Host "Execute este script na raiz do projeto ai_copper" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Cargo.toml encontrado" -ForegroundColor Green

# Verifica se CMake est√° instalado
Write-Host "`nüîç Verificando CMake..." -ForegroundColor Cyan
$cmake = Get-Command cmake -ErrorAction SilentlyContinue
if ($cmake) {
    $cmakeVersion = cmake --version | Select-Object -First 1
    Write-Host "‚úÖ CMake instalado: $cmakeVersion" -ForegroundColor Green
} else {
    Write-Host "‚ùå CMake n√£o encontrado!" -ForegroundColor Red
    Write-Host "Instale CMake de: https://cmake.org/download/" -ForegroundColor Yellow
    exit 1
}

# Verifica se as vari√°veis de ambiente est√£o definidas (opcional)
Write-Host "`nüîç Verificando vari√°veis de ambiente (opcional)..." -ForegroundColor Cyan
$libtorch = $env:LIBTORCH
$tensorflow = $env:TENSORFLOW_ROOT

if ($libtorch) {
    Write-Host "‚úÖ LIBTORCH definido: $libtorch" -ForegroundColor Green
} else {
    Write-Host "‚ÑπÔ∏è  LIBTORCH n√£o definido (ser√° baixado automaticamente)" -ForegroundColor Yellow
}

if ($tensorflow) {
    Write-Host "‚úÖ TENSORFLOW_ROOT definido: $tensorflow" -ForegroundColor Green
} else {
    Write-Host "‚ÑπÔ∏è  TENSORFLOW_ROOT n√£o definido (ser√° baixado automaticamente)" -ForegroundColor Yellow
}

# Verifica se o diret√≥rio deps existe
Write-Host "`nüîç Verificando cache de bibliotecas..." -ForegroundColor Cyan
if (Test-Path "deps/libtorch") {
    Write-Host "‚úÖ LibTorch encontrado em cache (deps/libtorch)" -ForegroundColor Green
} else {
    Write-Host "‚ÑπÔ∏è  LibTorch n√£o est√° em cache (ser√° baixado na compila√ß√£o)" -ForegroundColor Yellow
}

if (Test-Path "deps/tensorflow") {
    Write-Host "‚úÖ TensorFlow encontrado em cache (deps/tensorflow)" -ForegroundColor Green
} else {
    Write-Host "‚ÑπÔ∏è  TensorFlow n√£o est√° em cache (ser√° baixado na compila√ß√£o)" -ForegroundColor Yellow
}

# Tenta compilar
Write-Host "`nüî® Testando compila√ß√£o..." -ForegroundColor Cyan
Write-Host "Isso pode levar alguns minutos na primeira vez..." -ForegroundColor Yellow

$compileStart = Get-Date
$compileResult = cargo build --release 2>&1
$compileEnd = Get-Date
$compileDuration = ($compileEnd - $compileStart).TotalSeconds

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Compila√ß√£o bem-sucedida!" -ForegroundColor Green
    Write-Host "‚è±Ô∏è  Tempo de compila√ß√£o: $([math]::Round($compileDuration, 2)) segundos" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå Falha na compila√ß√£o!" -ForegroundColor Red
    Write-Host "`nErros:" -ForegroundColor Yellow
    Write-Host $compileResult
    exit 1
}

# Executa exemplo b√°sico
Write-Host "`nüß™ Executando exemplo b√°sico..." -ForegroundColor Cyan
$exampleResult = cargo run --example basic_usage 2>&1

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Exemplo executado com sucesso!" -ForegroundColor Green
    Write-Host "`nSa√≠da:" -ForegroundColor Cyan
    Write-Host $exampleResult
} else {
    Write-Host "‚ö†Ô∏è  Falha ao executar exemplo" -ForegroundColor Yellow
    Write-Host "Isso pode ser normal se o exemplo precisar de ajustes" -ForegroundColor Yellow
}

Write-Host "`n‚úÖ AI Copper est√° instalado e funcionando!" -ForegroundColor Green

Write-Host "`nüí° Dica: As bibliotecas baixadas est√£o em deps/ e ser√£o reutilizadas" -ForegroundColor Cyan
Write-Host "="*60 -ForegroundColor Cyan
