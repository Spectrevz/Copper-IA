#!/bin/bash
# Script de teste para verificar a instala√ß√£o do AI Copper

echo "üîç Verificando instala√ß√£o do AI Copper..."

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Verifica se o Cargo.toml existe
if [ ! -f "Cargo.toml" ]; then
    echo -e "${RED}‚ùå Cargo.toml n√£o encontrado!${NC}"
    echo -e "${YELLOW}Execute este script na raiz do projeto ai_copper${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Cargo.toml encontrado${NC}"

# Verifica se CMake est√° instalado
echo -e "\n${CYAN}üîç Verificando CMake...${NC}"
if command -v cmake &> /dev/null; then
    CMAKE_VERSION=$(cmake --version | head -n1)
    echo -e "${GREEN}‚úÖ CMake instalado: $CMAKE_VERSION${NC}"
else
    echo -e "${RED}‚ùå CMake n√£o encontrado!${NC}"
    echo -e "${YELLOW}Instale CMake: sudo apt-get install cmake (Ubuntu/Debian)${NC}"
    exit 1
fi

# Verifica se as vari√°veis de ambiente est√£o definidas (opcional)
echo -e "\n${CYAN}üîç Verificando vari√°veis de ambiente (opcional)...${NC}"
if [ -n "$LIBTORCH" ]; then
    echo -e "${GREEN}‚úÖ LIBTORCH definido: $LIBTORCH${NC}"
else
    echo -e "${YELLOW}‚ÑπÔ∏è  LIBTORCH n√£o definido (ser√° baixado automaticamente)${NC}"
fi

if [ -n "$TENSORFLOW_ROOT" ]; then
    echo -e "${GREEN}‚úÖ TENSORFLOW_ROOT definido: $TENSORFLOW_ROOT${NC}"
else
    echo -e "${YELLOW}‚ÑπÔ∏è  TENSORFLOW_ROOT n√£o definido (ser√° baixado automaticamente)${NC}"
fi

# Verifica se o diret√≥rio deps existe
echo -e "\n${CYAN}üîç Verificando cache de bibliotecas...${NC}"
if [ -d "deps/libtorch" ]; then
    echo -e "${GREEN}‚úÖ LibTorch encontrado em cache (deps/libtorch)${NC}"
else
    echo -e "${YELLOW}‚ÑπÔ∏è  LibTorch n√£o est√° em cache (ser√° baixado na compila√ß√£o)${NC}"
fi

if [ -d "deps/tensorflow" ]; then
    echo -e "${GREEN}‚úÖ TensorFlow encontrado em cache (deps/tensorflow)${NC}"
else
    echo -e "${YELLOW}‚ÑπÔ∏è  TensorFlow n√£o est√° em cache (ser√° baixado na compila√ß√£o)${NC}"
fi

# Tenta compilar
echo -e "\n${CYAN}üî® Testando compila√ß√£o...${NC}"
echo -e "${YELLOW}Isso pode levar alguns minutos na primeira vez...${NC}"

START_TIME=$(date +%s)
if cargo build --release; then
    END_TIME=$(date +%s)
    DURATION=$((END_TIME - START_TIME))
    echo -e "${GREEN}‚úÖ Compila√ß√£o bem-sucedida!${NC}"
    echo -e "${CYAN}‚è±Ô∏è  Tempo de compila√ß√£o: $DURATION segundos${NC}"
else
    echo -e "${RED}‚ùå Falha na compila√ß√£o!${NC}"
    exit 1
fi

# Executa exemplo b√°sico
echo -e "\n${CYAN}üß™ Executando exemplo b√°sico...${NC}"
if cargo run --example basic_usage; then
    echo -e "${GREEN}‚úÖ Exemplo executado com sucesso!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Falha ao executar exemplo${NC}"
    echo -e "${YELLOW}Isso pode ser normal se o exemplo precisar de ajustes${NC}"
fi

echo -e "\n${GREEN}‚úÖ AI Copper est√° instalado e funcionando!${NC}"

